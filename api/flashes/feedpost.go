// Code generated by cmd/lexgen (see Makefile's lexgen); DO NOT EDIT.

package flashes

// schema: app.flashes.feed.post

import (
	"bytes"
	"encoding/json"
	"fmt"
	"io"

	comatprototypes "github.com/bluesky-social/indigo/api/atproto"
	"github.com/bluesky-social/indigo/lex/util"
	cbg "github.com/whyrusleeping/cbor-gen"
)

func init() {
	util.RegisterType("app.flashes.feed.post", &FeedPost{})
} //
// RECORDTYPE: FeedPost
type FeedPost struct {
	LexiconTypeID string `json:"$type,const=app.flashes.feed.post" cborgen:"$type,const=app.flashes.feed.post"`
	// createdAt: Client-declared timestamp when this post was originally created.
	CreatedAt string `json:"createdAt" cborgen:"createdAt"`
	// labels: Self-label values for this post. Effectively content warnings.
	Labels *FeedPost_Labels `json:"labels,omitempty" cborgen:"labels,omitempty"`
	// langs: Indicates human language of post primary text content.
	Langs []string           `json:"langs,omitempty" cborgen:"langs,omitempty"`
	Reply *FeedPost_ReplyRef `json:"reply,omitempty" cborgen:"reply,omitempty"`
	// tags: Additional hashtags, in addition to any included in post text and facets.
	Tags []string `json:"tags,omitempty" cborgen:"tags,omitempty"`
	// text: The primary post content. May be an empty string, if there are embeds.
	Text string `json:"text" cborgen:"text"`
}

// Self-label values for this post. Effectively content warnings.
type FeedPost_Labels struct {
	LabelDefs_SelfLabels *comatprototypes.LabelDefs_SelfLabels
}

func (t *FeedPost_Labels) MarshalJSON() ([]byte, error) {
	if t.LabelDefs_SelfLabels != nil {
		t.LabelDefs_SelfLabels.LexiconTypeID = "com.atproto.label.defs#selfLabels"
		return json.Marshal(t.LabelDefs_SelfLabels)
	}
	return nil, fmt.Errorf("cannot marshal empty enum")
}
func (t *FeedPost_Labels) UnmarshalJSON(b []byte) error {
	typ, err := util.TypeExtract(b)
	if err != nil {
		return err
	}

	switch typ {
	case "com.atproto.label.defs#selfLabels":
		t.LabelDefs_SelfLabels = new(comatprototypes.LabelDefs_SelfLabels)
		return json.Unmarshal(b, t.LabelDefs_SelfLabels)

	default:
		return nil
	}
}

func (t *FeedPost_Labels) MarshalCBOR(w io.Writer) error {

	if t == nil {
		_, err := w.Write(cbg.CborNull)
		return err
	}
	if t.LabelDefs_SelfLabels != nil {
		return t.LabelDefs_SelfLabels.MarshalCBOR(w)
	}
	return fmt.Errorf("cannot cbor marshal empty enum")
}
func (t *FeedPost_Labels) UnmarshalCBOR(r io.Reader) error {
	typ, b, err := util.CborTypeExtractReader(r)
	if err != nil {
		return err
	}

	switch typ {
	case "com.atproto.label.defs#selfLabels":
		t.LabelDefs_SelfLabels = new(comatprototypes.LabelDefs_SelfLabels)
		return t.LabelDefs_SelfLabels.UnmarshalCBOR(bytes.NewReader(b))

	default:
		return nil
	}
}

// FeedPost_ReplyRef is a "replyRef" in the app.flashes.feed.post schema.
type FeedPost_ReplyRef struct {
	Parent *comatprototypes.RepoStrongRef `json:"parent" cborgen:"parent"`
	Root   *comatprototypes.RepoStrongRef `json:"root" cborgen:"root"`
}
